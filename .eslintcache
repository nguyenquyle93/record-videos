[{"D:\\Train\\PHPtest\\record-videos\\src\\index.js":"1","D:\\Train\\PHPtest\\record-videos\\src\\reportWebVitals.js":"2","D:\\Train\\PHPtest\\record-videos\\src\\ModuleTest.jsx":"3","D:\\Train\\PHPtest\\record-videos\\src\\App.jsx":"4","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\ScreenRecord.jsx":"5","D:\\Train\\PHPtest\\record-videos\\src\\Components\\Record\\Record.jsx":"6","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\VideoEdit.jsx":"7","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Clock.jsx":"8","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Player.jsx":"9","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\ScreenCrop.jsx":"10","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\IndexDB.jsx":"11","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Crop.jsx":"12"},{"size":797,"mtime":1612857167045,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":422,"mtime":1612341796941,"results":"16","hashOfConfig":"14"},{"size":924,"mtime":1612339184180,"results":"17","hashOfConfig":"14"},{"size":3353,"mtime":1612845174053,"results":"18","hashOfConfig":"14"},{"size":3516,"mtime":1612843550484,"results":"19","hashOfConfig":"14"},{"size":444,"mtime":1612500121508,"results":"20","hashOfConfig":"14"},{"size":665,"mtime":1612856305006,"results":"21","hashOfConfig":"14"},{"size":2135,"mtime":1612857346807,"results":"22","hashOfConfig":"14"},{"size":2017,"mtime":1612498067438,"results":"23","hashOfConfig":"14"},{"size":1155,"mtime":1612767463623,"results":"24","hashOfConfig":"14"},{"size":800,"mtime":1612856542765,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1n6u9nn",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Train\\PHPtest\\record-videos\\src\\index.js",["57","58","59"],"D:\\Train\\PHPtest\\record-videos\\src\\reportWebVitals.js",[],["60","61"],"D:\\Train\\PHPtest\\record-videos\\src\\ModuleTest.jsx",[],"D:\\Train\\PHPtest\\record-videos\\src\\App.jsx",["62","63","64","65","66","67","68"],"import React, {useState} from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\n\nfunction App() {\n  const array = []\n  for (let i = 1; i < 10; i++){\n      array.push({\n      id: i,\n      message: 'What is your name?',\n      trigger: i+1,\n    });\n    array.push({\n      id: i+1,\n      user: true,\n      trigger: i+2,\n    })\n  }\n  array.push(\n      {\n      id: 11,\n      message: 'Hi {previousValue}, nice to meet you!',\n      end: true,\n    }\n  )\n\n  const [id, setId] = useState('1');\n  const [trigger, setTrigger] = useState('2');\n  const [message, setMessage] = useState('What is your name?');\n  const [steps, setSteps] = useState(array);\n\n\n  return (\n    <div className=\"App\">\n      <ChatBot\n        headerTitle=\"Speech Synthesis\"\n        speechSynthesis={{ enable: true, lang: 'en' }}\n        steps={steps}\n        onPerfEntry={console.log('11111')}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\ScreenRecord.jsx",["69","70","71"],"import React, {useState} from 'react';\nimport useMediaRecorder from '@wmik/use-media-recorder';\nimport ScreenCrop from './ScreenCrop';\nimport VideoEdit from './VideoEdit';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Clock from './Clock';\nimport Player from './Player';\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction LiveStreamPreview({ stream }) {\n  let videoPreviewRef = React.useRef();\n\n  React.useEffect(() => {\n    if (videoPreviewRef.current && stream) {\n      videoPreviewRef.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  if (!stream) {\n    return null;\n  }\n\n  return <video ref={videoPreviewRef} width={520} height={480} autoPlay />;\n}\n\n\nexport default function ScreenRecord2() {\n  const [recordScreen, setRecordScreen] = useState(true);\n  let {\n    error,\n    status,\n    liveStream,\n    mediaBlob,\n    stopRecording,\n    getMediaStream,\n    startRecording,\n  } = useMediaRecorder({\n    recordScreen: recordScreen,\n    blobOptions: {\n      type: 'video',\n      mimeType: 'video/webm;codecs=vp9',\n      disableLogs: true,\n      // bitsPerSecond: 128000,\n      // frameRate: 30,\n      // frameInterval: 90,\n      // sampleRate: 96000,\n      // desiredSampRate: 16000,\n      // bufferSize: 16384,\n      // bitrate: 128000,\n      // video: 'HTMLVideoElement',\n    },\n    mediaStreamConstraints: { audio: true, video: true }\n  });\n\n  return (\n    <article style={{textAlign: 'center'}}>\n      <h1>Screen recorder</h1>\n      <span style={{fontSize:24, margin: 10}}>\n       Status :\n      </span>\n      <span style={{color: 'red', fontSize:24, margin: 10}}>\n        {error ? `${status} ${error.message}` : status === 'recording' ?\n          <span>\n            {status}\n            <Spin indicator={antIcon} />\n            <Clock />\n          </span>\n          : status}\n      </span>\n      <section>\n        <button\n          type=\"button\"\n          onClick={() => startRecording(1000)}\n          disabled={status === 'recording'}\n          style={{\n            color: status === 'recording' ?\n              'gray' : 'red', \n            borderColor: status === 'recording' ?\n              '' : 'red', \n          }}\n        >\n          Start recording\n        </button>\n        <button\n          style={{\n            paddingLeft: 10,\n            color: status !== 'recording' ?\n              'gray' : 'red',\n            borderColor: status !== 'recording' ?\n              '' : 'red',\n          }}\n          type=\"button\"\n          onClick={stopRecording}\n          disabled={status !== 'recording'}\n        >\n          Stop recording\n        </button>\n        <p>\n        Select video source\n        <label style={{paddingLeft:10}}>\n          <input\n            type=\"radio\"\n            checked={recordScreen}\n            onChange={() => setRecordScreen((prevState) => !prevState)}\n          />{' '}\n          Screen\n        </label>\n        <label style={{paddingLeft:10}}>\n          <input\n            type=\"radio\"\n            checked={!recordScreen}\n            onChange={() => setRecordScreen((prevState) => !prevState)}\n          />{' '}\n          Camera\n        </label>\n      </p>\n      </section>\n      <LiveStreamPreview stream={liveStream} />\n      {\n        status === 'stopped' && <Player srcBlob={mediaBlob} status={status} />\n      }\n    </article>\n  );\n}","D:\\Train\\PHPtest\\record-videos\\src\\Components\\Record\\Record.jsx",["72","73","74","75","76","77","78","79"],"import React, {useState} from 'react';\nimport useMediaRecorder from '@wmik/use-media-recorder';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Clock from '../ScreenRecord/Clock';\nimport Player from '../ScreenRecord/Player';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\n\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction LiveStreamPreview({ stream }) {\n  let videoPreviewRef = React.useRef();\n\n  React.useEffect(() => {\n    if (videoPreviewRef.current && stream) {\n      videoPreviewRef.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  if (!stream) {\n    return null;\n  }\n\n  return <video ref={videoPreviewRef} width={520} height={480} autoPlay />;\n}\n\n\nexport default function Record() {\n  const [recordScreen, setRecordScreen] = useState(true);\n  let mediaStream = navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n  var config = {\n    mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n    audioBitsPerSecond : 256 * 8 * 1024,\n    videoBitsPerSecond : 256 * 8 * 1024,\n    bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n    checkForInactiveTracks: true,\n    timeSlice: 1000, // concatenate intervals based blobs\n    ondataavailable: function() {} // get intervals based blobs\n}\n    var recorder = new MediaStreamRecorder(mediaStream, config);\n  \n  const stopRecording =  () => {\nrecorder.stop(function(blob) {\n    // or\n  var blob = recorder.blob;\n  console.log(blob)\n});\n  }\n  return (\n    <article style={{textAlign: 'center'}}>\n      <h1>Screen recorder</h1>\n      <span style={{fontSize:24, margin: 10}}>\n       Status :\n      </span>\n      {/* <span style={{color: 'red', fontSize:24, margin: 10}}>\n        {error ? `${status} ${error.message}` : status === 'recording' ?\n          <span>\n            {status}\n            <Spin indicator={antIcon} />\n            <Clock />\n          </span>\n          : status}\n      </span> */}\n      <section>\n        <button\n          type=\"button\"\n          onClick={() => recorder.record()}\n          // disabled={status === 'recording'}\n          // style={{\n          //   color: status === 'recording' ?\n          //     'gray' : 'red', \n          //   borderColor: status === 'recording' ?\n          //     '' : 'red', \n          // }}\n        >\n          Start recording\n        </button>\n        <button\n          // style={{\n          //   paddingLeft: 10,\n          //   color: status !== 'recording' ?\n          //     'gray' : 'red',\n          //   borderColor: status !== 'recording' ?\n          //     '' : 'red',\n          // }}\n          type=\"button\"\n          onClick={stopRecording}\n          // disabled={status !== 'recording'}\n        >\n          Stop recording\n        </button>\n        <p>\n        Select video source\n        <label style={{paddingLeft:10}}>\n          <input\n            type=\"radio\"\n            checked={recordScreen}\n            onChange={() => setRecordScreen((prevState) => !prevState)}\n          />{' '}\n          Screen\n        </label>\n        <label style={{paddingLeft:10}}>\n          <input\n            type=\"radio\"\n            checked={!recordScreen}\n            onChange={() => setRecordScreen((prevState) => !prevState)}\n          />{' '}\n          Camera\n        </label>\n      </p>\n      </section>\n      {/* <LiveStreamPreview stream={liveStream} /> */}\n      {/* {\n        status === 'stopped' && <Player srcBlob={mediaBlob} status={status} />\n      } */}\n    </article>\n  );\n}","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\VideoEdit.jsx",["80"],"// import VideoCrop from 'video-crop';\n\nexport default function VideoEdit(video) {\nconst testFile = video;\nconst outFile = '/public/videoout/out.mp4';\n\nconst opts = {\n  input: testFile,\n  output: outFile,\n  x: [500, 600],\n  y: [250, 500],\n  height: [100, 300],\n  width: [100, 300],\n  fps: 60 // optional \n};\n\n  // const vc = new VideoCrop();\n  \n; // outputs two files: '/path/to/out1.mp4', '/path/to/out2.mp4'\n  return (\n    <div></div>\n  )\n}\n\n","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Clock.jsx",["81"],"import React, { useState, useEffect } from 'react';\n\n\nexport default function Clock() {\n  const [timeH, setTimeH] = useState(0);\n  const [timeM, setTimeM] = useState(0);\n  const [timeS, setTimeS] = useState(0);\n\n  setTimeout(() => {\n    if (timeS === 59) {\n      setTimeS(0);\n      setTimeM(timeM + 1);\n      if (timeM === 59) {\n      setTimeM(0)\n      setTimeH(timeH+1)\n    }\n      return\n      }\n      setTimeS(timeS+1)\n    }, 1000) \n\n  return (\n    <span style={{paddingLeft: 10}}>\n      {timeH > 0 && <span>{timeH<10?`0${timeH}`:timeH}:</span>}\n      <span>{timeM<10?`0${timeM}`:timeM}:</span>\n      <span>{timeS<10?`0${timeS}`:timeS}</span>\n    </span>\n  )\n}\n\n","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Player.jsx",["82","83","84","85"],"D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\ScreenCrop.jsx",["86","87","88","89","90","91","92","93","94","95"],"import React, { useState, useCallback, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Slider, Switch, Button } from 'antd';\nimport { Input } from 'antd';\nimport Cropper from 'react-easy-crop'\nimport  './style.css'\n\nexport default function ScreenCrop(video) {\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\n  const [zoom, setZoom] = useState(1)\n  const [aspectH, setAspectH] = useState(4);\n  const [aspectW, setAspectW] = useState(3);\n    const [initialCroppedAreaPixels, setInitialCroppedAreaPixels] = useState(\n    undefined\n    )\n  const [downloadLink, setDownloadLink] = useState();\n\n    useEffect(() => {\n    const croppedAreaPixels = JSON.parse(\n      window.localStorage.getItem('croppedAreaPixels')\n    )\n    setInitialCroppedAreaPixels(croppedAreaPixels)\n    }, [])\n  \n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        window.localStorage.setItem(\n      'croppedAreaPixels',\n      JSON.stringify(croppedAreaPixels)\n    )\n  }, [])\n\n  return (\n    <div>\n      <div className=\"crop-container\">\n        <Cropper\n          video={video}\n          crop={crop}\n          zoom={zoom}\n          aspect={aspectH / aspectW}\n          onCropChange={setCrop}\n          onCropComplete={onCropComplete}\n          onZoomChange={setZoom}\n        />\n      </div>\n      {/* <div className=\"controls\">\n        <Slider\n          defaultValue={zoom}\n          step={0.001}\n          min={1}\n          max={2}\n          onChange={(value) => setZoom(value)}\n        />\n        <h2 style={{color: 'red'}}>\n          Heigh Percent\n        <Input placeholder=\"Heigh Percent\" type=\"number\" min={1} value={aspectH} onChange={value => setAspectH(value)}/>\n        </h2>\n        <h2 style={{color: 'red'}}>\n          Width Percent\n        <Input placeholder=\"Width Percent\" type=\"number\" min={1} value={aspectW} onChange={value => setAspectW(value)}/>\n        </h2>\n        <div style={{color: 'red', zIndex:999}}>\n          Download\n        </div>\n      </div> */}\n    </div>\n  )\n}\n","D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\IndexDB.jsx",[],"D:\\Train\\PHPtest\\record-videos\\src\\Components\\ScreenRecord\\Crop.jsx",["96","97","98","99","100","101","102","103","104"],{"ruleId":"105","severity":1,"message":"106","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"109","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":18},{"ruleId":"105","severity":1,"message":"110","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"115","line":27,"column":10,"nodeType":"107","messageId":"108","endLine":27,"endColumn":12},{"ruleId":"105","severity":1,"message":"116","line":27,"column":14,"nodeType":"107","messageId":"108","endLine":27,"endColumn":19},{"ruleId":"105","severity":1,"message":"117","line":28,"column":10,"nodeType":"107","messageId":"108","endLine":28,"endColumn":17},{"ruleId":"105","severity":1,"message":"118","line":28,"column":19,"nodeType":"107","messageId":"108","endLine":28,"endColumn":29},{"ruleId":"105","severity":1,"message":"119","line":29,"column":10,"nodeType":"107","messageId":"108","endLine":29,"endColumn":17},{"ruleId":"105","severity":1,"message":"120","line":29,"column":19,"nodeType":"107","messageId":"108","endLine":29,"endColumn":29},{"ruleId":"105","severity":1,"message":"121","line":30,"column":17,"nodeType":"107","messageId":"108","endLine":30,"endColumn":25},{"ruleId":"105","severity":1,"message":"122","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":18},{"ruleId":"105","severity":1,"message":"123","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":17},{"ruleId":"105","severity":1,"message":"124","line":38,"column":5,"nodeType":"107","messageId":"108","endLine":38,"endColumn":19},{"ruleId":"105","severity":1,"message":"125","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":24},{"ruleId":"105","severity":1,"message":"126","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"127","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"128","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":14},{"ruleId":"105","severity":1,"message":"129","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":17},{"ruleId":"105","severity":1,"message":"130","line":11,"column":7,"nodeType":"107","messageId":"108","endLine":11,"endColumn":14},{"ruleId":"105","severity":1,"message":"131","line":13,"column":10,"nodeType":"107","messageId":"108","endLine":13,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":47,"column":7,"nodeType":"107","messageId":"134","endLine":47,"endColumn":11},{"ruleId":"105","severity":1,"message":"135","line":7,"column":7,"nodeType":"107","messageId":"108","endLine":7,"endColumn":11},{"ruleId":"105","severity":1,"message":"136","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"136","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"137","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"138","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":57,"column":7,"nodeType":"141","endLine":57,"endColumn":116},{"ruleId":"105","severity":1,"message":"142","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"143","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"144","line":3,"column":18,"nodeType":"107","messageId":"108","endLine":3,"endColumn":24},{"ruleId":"105","severity":1,"message":"145","line":3,"column":26,"nodeType":"107","messageId":"108","endLine":3,"endColumn":32},{"ruleId":"105","severity":1,"message":"146","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":15},{"ruleId":"105","severity":1,"message":"147","line":11,"column":19,"nodeType":"107","messageId":"108","endLine":11,"endColumn":29},{"ruleId":"105","severity":1,"message":"148","line":12,"column":19,"nodeType":"107","messageId":"108","endLine":12,"endColumn":29},{"ruleId":"105","severity":1,"message":"149","line":13,"column":12,"nodeType":"107","messageId":"108","endLine":13,"endColumn":36},{"ruleId":"105","severity":1,"message":"150","line":16,"column":10,"nodeType":"107","messageId":"108","endLine":16,"endColumn":22},{"ruleId":"105","severity":1,"message":"151","line":16,"column":24,"nodeType":"107","messageId":"108","endLine":16,"endColumn":39},{"ruleId":"105","severity":1,"message":"152","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":38},{"ruleId":"105","severity":1,"message":"142","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"143","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"144","line":3,"column":18,"nodeType":"107","messageId":"108","endLine":3,"endColumn":24},{"ruleId":"105","severity":1,"message":"153","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":15},{"ruleId":"105","severity":1,"message":"145","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"154","line":6,"column":15,"nodeType":"107","messageId":"108","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"155","line":6,"column":20,"nodeType":"107","messageId":"108","endLine":6,"endColumn":27},{"ruleId":"105","severity":1,"message":"156","line":6,"column":29,"nodeType":"107","messageId":"108","endLine":6,"endColumn":32},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'ModuleTest' is defined but never used.","'Record' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'trigger' is assigned a value but never used.","'setTrigger' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'setSteps' is assigned a value but never used.","'ScreenCrop' is defined but never used.","'VideoEdit' is defined but never used.","'getMediaStream' is assigned a value but never used.","'useMediaRecorder' is defined but never used.","'Spin' is defined but never used.","'Clock' is defined but never used.","'Player' is defined but never used.","'RecordRTC' is defined but never used.","'antIcon' is assigned a value but never used.","'LiveStreamPreview' is defined but never used.","no-redeclare","'blob' is already defined.","redeclared","'opts' is assigned a value but never used.","'useEffect' is defined but never used.","'openDB' is defined but never used.","'IndexDB' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ReactDOM' is defined but never used.","'Slider' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'setAspectH' is assigned a value but never used.","'setAspectW' is assigned a value but never used.","'initialCroppedAreaPixels' is assigned a value but never used.","'downloadLink' is assigned a value but never used.","'setDownloadLink' is assigned a value but never used.","'useCallback' is defined but never used.","'Cropper' is defined but never used.","'set' is defined but never used.","'entries' is defined but never used.","'del' is defined but never used.","no-global-assign","no-unsafe-negation"]